{"version":3,"sources":["components/SpinningSelector.tsx","utils.ts","App.tsx","index.tsx","App.module.scss","components/SpinningSelector.module.scss"],"names":["SpinningSelector","spinSpeed","options","useState","undefined","selected","setSelected","useWebAnimations","onFinish","animate","animation","curAnimation","getAnimation","id","playState","keyframes","transform","animationOptions","duration","length","iterations","Infinity","ref","useEffect","curPosition","current","st","window","getComputedStyle","tr","getPropertyValue","values","split","cosx","sinx","parseFloat","console","error","Math","round","atan2","PI","getXRotation","endPosition","indexOf","easing","fill","className","styles","container","style","optionsList","map","option","i","onMouseDown","placeholderList","aria-hidden","placeholder","App","page","header","title","socials","href","icon","faEnvelope","faGithub","faLinkedin","main","headline","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qPAwGeA,EA9FU,SAAC,GAAwC,IAAD,IAArCC,iBAAqC,MAAzB,GAAyB,EAArBC,EAAqB,EAArBA,QAC1C,EAAgCC,wBAA6BC,GAA7D,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAuCC,YAAiC,CACtEC,SAAU,YAA6B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACdC,EAAeC,IAIF,cAAjBF,EAAUG,IACW,eAAT,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcE,KACc,cAAhB,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcG,YAEdL,EAAQ,CACNI,GAAI,OACJE,UAAW,CACTC,UAAW,CAAC,gBAAiB,qBAE/BC,iBAAkB,CAChBC,SAAW,IAAOhB,EAAQiB,OAAUlB,EACpCmB,WAAYC,UAjBdC,EAAR,EAAQA,IAAKb,EAAb,EAAaA,QAASG,EAAtB,EAAsBA,aA4DtB,OApCAW,qBAAU,WACR,IAAMC,ECpCH,SAA6CF,GAClD,GAAoB,OAAhBA,EAAIG,QAAR,CAIA,IAAMC,EAAKC,OAAOC,iBAAiBN,EAAIG,QAAS,MAC1CI,EAAKH,EAAGI,iBAAiB,sBACtBJ,EAAGI,iBAAiB,mBACpBJ,EAAGI,iBAAiB,kBACpBJ,EAAGI,iBAAiB,iBACpBJ,EAAGI,iBAAiB,mBACpB1B,EAET,QAAWA,IAAPyB,GAA2B,SAAPA,EACtB,OAAO,EAIT,IAAME,EAASF,EAAGG,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAChDC,EAAO,EACPC,EAAO,EACX,OAAQL,EAAGG,MAAM,KAAK,IACpB,IAAK,SAEHC,EAAOE,WAAWJ,EAAO,IACzBG,EAAO,EACP,MACF,IAAK,WAEHD,EAAOE,WAAWJ,EAAO,IACzBG,EAAOC,WAAWJ,EAAO,IACzB,MACF,QACEK,QAAQC,MAAR,0BAAiCR,EAAjC,yBAGJ,OAAOS,KAAKC,MAAMD,KAAKE,MAAMN,EAAMD,KAAU,IAAIK,KAAKG,MDAhCC,CAAapB,GACjC,QAAoBlB,IAAhBoB,EACF,QAAiBpB,IAAbC,EAAwB,CAC1B,IAAIsC,EAAezC,EAAQ0C,QAAQvC,GAAYH,EAAQiB,QAAW,IAC9DwB,GAAenB,IACjBmB,GAAe,KAEjBlC,EAAQ,CACNI,GAAI,WACJE,UAAW,CACTC,UAAW,CAAC,WAAD,OAAYQ,EAAZ,0BAA0CmB,EAA1C,UAEb1B,iBAAkB,CAChBC,SAAW,IAAOhB,EAAQiB,OAAUlB,EACpC4C,OAAQ,WACRC,KAAM,WACN1B,WAAY,UAIhBX,EAAQ,CACNI,GAAI,YACJE,UAAW,CACTC,UAAW,CAAC,WAAD,OAAYQ,EAAZ,QAA+B,qBAE5CP,iBAAkB,CAChBC,SAAW,IAAOhB,EAAQiB,OAAUlB,EACpC4C,OAAQ,UACRzB,WAAY,OAKnB,CAACX,EAASG,EAAcV,EAASD,EAAWqB,EAAKjB,IAGlD,sBACE0C,UAAWC,IAAOC,UAClBC,MAAO,CAAE,eAAgBjD,EAAW,gBAAiBC,EAAQiB,QAF/D,UAIE,qBAAK4B,UAAWC,IAAOG,YAAa7B,IAAKA,EAAzC,SACGpB,EAAQkD,KAAI,SAACC,EAAQC,GAAT,OACX,qBAEEP,UAAWC,IAAOK,OAClBE,YAAa,WACAjD,EAAXD,OAAuBD,EAAyBiD,IAElDH,MAAO,CAAE,eAAgBI,GAN3B,SAQGD,GAPIC,QAYX,qBAAKP,UAAWC,IAAOQ,gBAAvB,SACGtD,EAAQkD,KAAI,SAACC,EAAQC,GAAT,OACX,qBAAKG,cAAY,OAAOV,UAAWC,IAAOU,YAA1C,SACGL,GADyDC,Y,uCElDvDK,MAvCf,WACE,OACE,sBAAKZ,UAAWC,IAAOY,KAAvB,UACE,yBAAQb,UAAWC,IAAOa,OAA1B,UACE,qBAAKd,UAAWC,IAAOc,MAAvB,0BACA,sBAAKf,UAAWC,IAAOe,QAAvB,UACE,mBAAGC,KAAK,6BAAR,SACE,cAAC,IAAD,CAAiBC,KAAMC,QAEzB,mBAAGF,KAAK,+BAAR,SACE,cAAC,IAAD,CAAiBC,KAAME,QAEzB,mBAAGH,KAAK,uCAAR,SACE,cAAC,IAAD,CAAiBC,KAAMG,cAI7B,qBAAKrB,UAAWC,IAAOqB,KAAvB,SACE,sBAAKtB,UAAWC,IAAOsB,SAAvB,UACE,0CACA,cAAC,EAAD,CACEpE,QAAS,CACP,aACA,SACA,SACA,QACA,YACA,OACA,YACA,iBACA,8BC/BdqE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,QAAU,qBAAqB,KAAO,kBAAkB,SAAW,wB,kBCA3ID,EAAOC,QAAU,CAAC,UAAY,oCAAoC,YAAc,sCAAsC,OAAS,iCAAiC,gBAAkB,0CAA0C,YAAc,yC","file":"static/js/main.1f455865.chunk.js","sourcesContent":["import styles from \"./SpinningSelector.module.scss\";\nimport useWebAnimations from \"@wellyshen/use-web-animations\";\nimport { useEffect, useState } from \"react\";\nimport { getXRotation } from \"../utils\";\n\ntype Props = {\n  spinSpeed?: number;\n  options: string[];\n};\n\nconst SpinningSelector = ({ spinSpeed = 10, options }: Props) => {\n  const [selected, setSelected] = useState<string | undefined>(undefined);\n\n  const { ref, animate, getAnimation } = useWebAnimations<HTMLDivElement>({\n    onFinish: ({ animate, animation }) => {\n      const curAnimation = getAnimation();\n      // Chain spin animation to the end of startSpin animation only if it has not been\n      // replaced by another animation\n      if (\n        animation.id === \"startSpin\" &&\n        curAnimation?.id === \"startSpin\" &&\n        curAnimation?.playState === \"finished\"\n      ) {\n        animate({\n          id: \"spin\",\n          keyframes: {\n            transform: [\"rotateX(0deg)\", \"rotateX(-360deg)\"],\n          },\n          animationOptions: {\n            duration: (1000 * options.length) / spinSpeed,\n            iterations: Infinity,\n          },\n        });\n      }\n    },\n  });\n\n  useEffect(() => {\n    const curPosition = getXRotation(ref);\n    if (curPosition !== undefined) {\n      if (selected !== undefined) {\n        let endPosition = (options.indexOf(selected) / options.length) * -360;\n        if (endPosition >= curPosition) {\n          endPosition -= 360;\n        }\n        animate({\n          id: \"stopSpin\",\n          keyframes: {\n            transform: [`rotateX(${curPosition}deg)`, `rotateX(${endPosition}deg)`],\n          },\n          animationOptions: {\n            duration: (1000 * options.length) / spinSpeed,\n            easing: \"ease-out\",\n            fill: \"forwards\",\n            iterations: 1,\n          },\n        });\n      } else {\n        animate({\n          id: \"startSpin\",\n          keyframes: {\n            transform: [`rotateX(${curPosition}deg)`, \"rotateX(-360deg)\"],\n          },\n          animationOptions: {\n            duration: (1000 * options.length) / spinSpeed,\n            easing: \"ease-in\",\n            iterations: 1,\n          },\n        });\n      }\n    }\n  }, [animate, getAnimation, options, spinSpeed, ref, selected]);\n\n  return (\n    <div\n      className={styles.container}\n      style={{ \"--spin-speed\": spinSpeed, \"--num-options\": options.length }}\n    >\n      <div className={styles.optionsList} ref={ref}>\n        {options.map((option, i) => (\n          <div\n            key={i}\n            className={styles.option}\n            onMouseDown={() => {\n              selected ? setSelected(undefined) : setSelected(option);\n            }}\n            style={{ \"--spin-index\": i }}\n          >\n            {option}\n          </div>\n        ))}\n      </div>\n      {/* This gives the SpinningSelector the correct width */}\n      <div className={styles.placeholderList}>\n        {options.map((option, i) => (\n          <div aria-hidden=\"true\" className={styles.placeholder} key={i}>\n            {option}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SpinningSelector;\n","import { RefObject } from \"react\";\n\nexport function getXRotation<T extends HTMLElement>(ref: RefObject<T>): number | undefined {\n  if (ref.current === null) {\n    return undefined;\n  }\n\n  const st = window.getComputedStyle(ref.current, null);\n  const tr = st.getPropertyValue(\"-webkit-transform\") ||\n           st.getPropertyValue(\"-moz-transform\") ||\n           st.getPropertyValue(\"-ms-transform\") ||\n           st.getPropertyValue(\"-o-transform\") ||\n           st.getPropertyValue(\"transform\") ||\n           undefined;\n\n  if (tr === undefined || tr === \"none\") {\n    return 0;\n  }\n  \n  \n  const values = tr.split('(')[1].split(')')[0].split(',');\n  let cosx = 0;\n  let sinx = 0;\n  switch (tr.split('(')[0]) {\n    case \"matrix\":\n      // 2d matrix - https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix()\n      cosx = parseFloat(values[3]);\n      sinx = 0;\n      break;\n    case \"matrix3d\":\n      // 3d rotation matrix - https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotateX()\n      cosx = parseFloat(values[5]);\n      sinx = parseFloat(values[9]);\n      break;\n    default:\n      console.error(`Transform value ${tr} was not recognized.`)\n  }\n  \n  return Math.round(Math.atan2(sinx, cosx) * (-180/Math.PI));\n}","import SpinningSelector from \"./components/SpinningSelector\";\nimport styles from \"./App.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction App() {\n  return (\n    <div className={styles.page}>\n      <header className={styles.header}>\n        <div className={styles.title}>Nima Rahnema</div>\n        <div className={styles.socials}>\n          <a href=\"mailto:nwrahnema@gmail.com\">\n            <FontAwesomeIcon icon={faEnvelope} />\n          </a>\n          <a href=\"https://github.com/nwrahnema\">\n            <FontAwesomeIcon icon={faGithub} />\n          </a>\n          <a href=\"https://linkedin.com/in/nima-rahnema\">\n            <FontAwesomeIcon icon={faLinkedin} />\n          </a>\n        </div>\n      </header>\n      <div className={styles.main}>\n        <div className={styles.headline}>\n          <div>This is</div>\n          <SpinningSelector\n            options={[\n              \"my website\",\n              \"stupid\",\n              \"a test\",\n              \"silly\",\n              \"not funny\",\n              \"dumb\",\n              \"pointless\",\n              \"overengineered\",\n              \"a waste of time\",\n            ]}\n          ></SpinningSelector>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__1AVsN\",\"header\":\"App_header__2L3DO\",\"socials\":\"App_socials__27QIQ\",\"main\":\"App_main__uN9ca\",\"headline\":\"App_headline__J_zpD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SpinningSelector_container__1cYRY\",\"optionsList\":\"SpinningSelector_optionsList__1_MAL\",\"option\":\"SpinningSelector_option__3eD1O\",\"placeholderList\":\"SpinningSelector_placeholderList__2tSrp\",\"placeholder\":\"SpinningSelector_placeholder__ACwZG\"};"],"sourceRoot":""}