{"version":3,"sources":["components/SpinningSelector.tsx","utils.ts","App.tsx","index.tsx","App.module.scss","components/SpinningSelector.module.scss"],"names":["animateOptionsWithId","id","options","SpinningSelector","selected","spinSpeed","onOptionClick","optionClassName","getDuration","useCallback","startRotation","endRotation","length","spin","useMemo","keyframes","transform","animationOptions","duration","iterations","Infinity","startSpin","easing","stopSpin","fill","optionToRotation","option","index","indexOf","Error","useWebAnimations","onFinish","animate","animation","curAnimation","getAnimation","playState","ref","stoppingAt","useRef","useEffect","curPosition","current","st","window","getComputedStyle","tr","getPropertyValue","undefined","values","split","cosx","sinx","parseFloat","radians","Math","atan2","PI","round","getXRotation","endPosition","className","styles","container","style","optionsList","role","map","i","onMouseDown","e","aria-selected","placeholderList","aria-hidden","placeholder","randomOptions","interactiveOptions","website","github","name","email","linkedin","App","useState","setSelected","timeout","stopSpinner","value","clearTimeout","setTimeout","pickRandomOption","randomOptionsDiff","filter","floor","random","interval","setInterval","clearInterval","page","header","title","href","onMouseEnter","socials","icon","faEnvelope","target","rel","faGithub","faLinkedin","main","headline","Object","concat","spinnerOption","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.653883c4.chunk.js","sourcesContent":["import styles from \"./SpinningSelector.module.scss\";\nimport useWebAnimations, { AnimateOptions } from \"@wellyshen/use-web-animations\";\nimport { MouseEvent, useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { getXRotation } from \"../utils\";\n\ntype Props = {\n  options: string[];\n  selected?: string;\n  // spinSpeed is in units 'options per second'\n  spinSpeed?: number;\n  onOptionClick?: (e: MouseEvent, option: string) => void;\n  optionClassName?: string;\n};\n\nconst animateOptionsWithId = <T extends any[]>(\n  id: string,\n  options: (...args: T) => AnimateOptions\n) => ({\n  id: id,\n  options: (...args: T) => ({\n    id: id,\n    ...options(...args),\n  }),\n});\n\nconst SpinningSelector = ({\n  options,\n  selected,\n  spinSpeed = 10,\n  onOptionClick,\n  optionClassName,\n}: Props) => {\n  const getDuration = useCallback(\n    (startRotation: number, endRotation: number) => {\n      const optionsDistance = options.length * ((endRotation - startRotation) / -360);\n      return (1000 * optionsDistance) / spinSpeed;\n    },\n    [options.length, spinSpeed]\n  );\n\n  const spin = useMemo(\n    () =>\n      animateOptionsWithId(\"spin\", () => {\n        const startRotation = 0;\n        const endRotation = -360;\n        return {\n          keyframes: {\n            transform: [`rotateX(${startRotation}deg)`, `rotateX(${endRotation}deg)`],\n          },\n          animationOptions: {\n            duration: getDuration(startRotation, endRotation),\n            iterations: Infinity,\n          },\n        };\n      }),\n    [getDuration]\n  );\n\n  const startSpin = useMemo(\n    () =>\n      animateOptionsWithId(\"startSpin\", (startRotation: number) => {\n        const endRotation = -360;\n\n        return {\n          keyframes: {\n            transform: [`rotateX(${startRotation}deg)`, `rotateX(${endRotation}deg)`],\n          },\n          animationOptions: {\n            duration: getDuration(startRotation, endRotation),\n            easing: \"ease-in\",\n            iterations: 1,\n          },\n        };\n      }),\n    [getDuration]\n  );\n\n  const stopSpin = useMemo(\n    () =>\n      animateOptionsWithId(\"stopSpin\", (startRotation: number, endRotation: number) => {\n        return {\n          keyframes: {\n            transform: [`rotateX(${startRotation}deg)`, `rotateX(${endRotation}deg)`],\n          },\n          animationOptions: {\n            duration: getDuration(startRotation, endRotation),\n            easing: \"ease-out\",\n            fill: \"forwards\",\n            iterations: 1,\n          },\n        };\n      }),\n    [getDuration]\n  );\n\n  const optionToRotation = useCallback(\n    (option: string): number => {\n      const index = options.indexOf(option);\n      if (index < 0) {\n        throw new Error(`Option '${option}' is not present in 'options' array.`);\n      }\n      return (index / options.length) * -360;\n    },\n    [options]\n  );\n\n  const { ref, animate, getAnimation } = useWebAnimations<HTMLDivElement>({\n    onFinish: ({ animate, animation }) => {\n      const curAnimation = getAnimation();\n      /** Chain spin animation to the end of startSpin animation only if it has not been\n          overridden by another animation **/\n      if (\n        animation.id === startSpin.id &&\n        curAnimation?.id === startSpin.id &&\n        curAnimation?.playState === \"finished\"\n      ) {\n        animate(spin.options());\n      }\n    },\n  });\n\n  const stoppingAt = useRef<number | undefined>(0);\n\n  useEffect(() => {\n    let curPosition = getXRotation(ref);\n    if (curPosition === undefined) {\n      return;\n    }\n    // X rotation is returned counter-clockwise. Make negative to match with CSS animation rules.\n    curPosition *= -1;\n\n    if (selected !== undefined) {\n      let endPosition = optionToRotation(selected) - 360;\n      if (endPosition !== curPosition && endPosition !== stoppingAt.current) {\n        animate(stopSpin.options(curPosition, endPosition));\n        stoppingAt.current = endPosition;\n      }\n    } else {\n      const animation = getAnimation();\n      if (!animation || (animation.id !== startSpin.id && animation.id !== spin.id)) {\n        animate(startSpin.options(curPosition));\n        stoppingAt.current = undefined;\n      }\n    }\n  }, [animate, getAnimation, selected, ref, optionToRotation, spin.id, startSpin, stopSpin]);\n\n  return (\n    <div className={styles.container} style={{ \"--num-options\": options.length }}>\n      <div className={styles.optionsList} ref={ref} role=\"listbox\">\n        {options.map((option, i) => (\n          <div\n            style={{ \"--option-index\": i }}\n            key={i}\n            className={`${styles.option} ${optionClassName}`}\n            onMouseDown={(e) => {\n              onOptionClick?.(e, option);\n            }}\n            role=\"option\"\n            aria-selected={option === selected ? \"true\" : \"false\"}\n          >\n            {option}\n          </div>\n        ))}\n      </div>\n      {/* This gives the SpinningSelector the correct width */}\n      <div className={styles.placeholderList}>\n        {options.map((option, i) => (\n          <div aria-hidden=\"true\" className={styles.placeholder} key={i}>\n            {option}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SpinningSelector;\n","import { RefObject } from \"react\";\n\nexport function getXRotation<T extends HTMLElement>(ref: RefObject<T>): number | undefined {\n  if (ref.current === null) {\n    return undefined;\n  }\n\n  const st = window.getComputedStyle(ref.current, null);\n  const tr =\n    st.getPropertyValue(\"-webkit-transform\") ||\n    st.getPropertyValue(\"-moz-transform\") ||\n    st.getPropertyValue(\"-ms-transform\") ||\n    st.getPropertyValue(\"-o-transform\") ||\n    st.getPropertyValue(\"transform\") ||\n    undefined;\n\n  if (tr === undefined || tr === \"none\") {\n    return 0;\n  }\n\n  const values = tr.split(\"(\")[1].split(\")\")[0].split(\",\");\n  let cosx = 0;\n  let sinx = 0;\n  switch (tr.split(\"(\")[0]) {\n    case \"matrix\":\n      // 2d matrix - https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix()\n      cosx = parseFloat(values[3]);\n      sinx = 0;\n      break;\n    case \"matrix3d\":\n      // 3d rotation matrix - https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotateX()\n      cosx = parseFloat(values[5]);\n      sinx = parseFloat(values[9]);\n      break;\n    default:\n      throw new Error(`Transform value ${tr} was not recognized.`);\n  }\n\n  let radians = Math.atan2(sinx, cosx);\n  if (radians < 0) {\n    radians += 2 * Math.PI;\n  }\n  return Math.round(radians * (180 / Math.PI)) % 360;\n}\n","import SpinningSelector from \"./components/SpinningSelector\";\nimport styles from \"./App.module.scss\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\n\nconst randomOptions = [\n  \"in progress\",\n  \"a test\",\n  \"silly\",\n  \"made in React\",\n  \"overengineered\",\n  \"a wheel\",\n];\n\nconst interactiveOptions = {\n  website: \"my website\",\n  github: \"my GitHub\",\n  name: \"my name\",\n  email: \"my email\",\n  linkedin: \"my LinkedIn\",\n};\n\nfunction App() {\n  const [selected, setSelected] = useState<string | undefined>(undefined);\n  const timeout = useRef<NodeJS.Timeout>();\n\n  const stopSpinner = useCallback((value: string) => {\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n    }\n    setSelected(value);\n    timeout.current = setTimeout(() => setSelected(undefined), 3000);\n  }, []);\n\n  const pickRandomOption = useCallback(() => {\n    const randomOptionsDiff = randomOptions.filter((value) => value !== selected);\n\n    return randomOptionsDiff[Math.floor(Math.random() * randomOptionsDiff.length)];\n  }, [selected]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (selected === undefined) {\n        stopSpinner(pickRandomOption());\n      }\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [selected, stopSpinner, pickRandomOption]);\n\n  return (\n    <div className={styles.page}>\n      <header className={styles.header}>\n        <a\n          className={styles.title}\n          href=\"/\"\n          onMouseEnter={() => stopSpinner(interactiveOptions.name)}\n        >\n          Nima Rahnema\n        </a>\n        <div className={styles.socials}>\n          <a\n            href=\"mailto:nwrahnema@gmail.com\"\n            title=\"Email\"\n            onMouseEnter={() => stopSpinner(interactiveOptions.email)}\n          >\n            <FontAwesomeIcon icon={faEnvelope} />\n          </a>\n          <a\n            href=\"https://github.com/nwrahnema\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            title=\"GitHub\"\n            onMouseEnter={() => stopSpinner(interactiveOptions.github)}\n          >\n            <FontAwesomeIcon icon={faGithub} />\n          </a>\n          <a\n            href=\"https://linkedin.com/in/nima-rahnema\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            title=\"LinkedIn\"\n            onMouseEnter={() => stopSpinner(interactiveOptions.linkedin)}\n          >\n            <FontAwesomeIcon icon={faLinkedin} />\n          </a>\n        </div>\n      </header>\n      <main className={styles.main}>\n        <h1 className={styles.headline}>\n          <span>This is</span>\n          <SpinningSelector\n            options={Object.values(interactiveOptions).concat(randomOptions)}\n            onOptionClick={() => stopSpinner(pickRandomOption())}\n            selected={selected}\n            optionClassName={styles.spinnerOption}\n          ></SpinningSelector>\n        </h1>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__1AVsN\",\"header\":\"App_header__2L3DO\",\"title\":\"App_title__2oBiX\",\"socials\":\"App_socials__27QIQ\",\"main\":\"App_main__uN9ca\",\"headline\":\"App_headline__J_zpD\",\"spinnerOption\":\"App_spinnerOption__2ZJ7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SpinningSelector_container__1cYRY\",\"optionsList\":\"SpinningSelector_optionsList__1_MAL\",\"option\":\"SpinningSelector_option__3eD1O\",\"placeholderList\":\"SpinningSelector_placeholderList__2tSrp\",\"placeholder\":\"SpinningSelector_placeholder__ACwZG\"};"],"sourceRoot":""}