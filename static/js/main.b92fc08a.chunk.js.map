{"version":3,"sources":["components/SpinningSelector.tsx","utils.ts","App.tsx","index.tsx","App.module.scss","components/SpinningSelector.module.scss"],"names":["animateOptionsWithId","id","options","SpinningSelector","selected","spinSpeed","onOptionClick","optionClassName","spin","useMemo","keyframes","transform","animationOptions","duration","length","iterations","Infinity","startSpin","curPosition","easing","stopSpin","endPosition","fill","optionToRotation","useCallback","option","index","indexOf","Error","useWebAnimations","onFinish","animate","animation","curAnimation","getAnimation","playState","ref","stoppingAt","useRef","useEffect","current","st","window","getComputedStyle","tr","getPropertyValue","undefined","values","split","cosx","sinx","parseFloat","radians","Math","atan2","PI","round","getXRotation","className","styles","container","style","optionsList","role","map","i","onMouseDown","e","aria-selected","placeholderList","aria-hidden","placeholder","randomOptions","interactiveOptions","website","github","name","email","linkedin","App","useState","setSelected","timeoutComplete","spinSpinner","timeout","setTimeout","clearTimeout","stopSpinner","value","stopPropagation","pickRandomOption","randomOptionsDiff","filter","floor","random","page","onMouseMove","header","title","href","socials","icon","faEnvelope","target","rel","faGithub","faLinkedin","main","headline","Object","concat","spinnerOption","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b92fc08a.chunk.js","sourcesContent":["import styles from \"./SpinningSelector.module.scss\";\nimport useWebAnimations, { AnimateOptions } from \"@wellyshen/use-web-animations\";\nimport { MouseEvent, useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { getXRotation } from \"../utils\";\n\ntype Props = {\n  options: string[];\n  selected?: string;\n  spinSpeed?: number;\n  onOptionClick?: (e: MouseEvent, option: string) => void;\n  optionClassName?: string;\n};\n\nconst animateOptionsWithId = <T extends any[]>(\n  id: string,\n  options: (...args: T) => AnimateOptions\n) => ({\n  id: id,\n  options: (...args: T) => {\n    return { id: id, ...options(...args) };\n  },\n});\n\nconst SpinningSelector = ({\n  options,\n  selected,\n  spinSpeed = 10,\n  onOptionClick,\n  optionClassName,\n}: Props) => {\n  const spin = useMemo(\n    () =>\n      animateOptionsWithId(\"spin\", () => ({\n        keyframes: {\n          transform: [\"rotateX(0deg)\", \"rotateX(-360deg)\"],\n        },\n        animationOptions: {\n          duration: (1000 * options.length) / spinSpeed,\n          iterations: Infinity,\n        },\n      })),\n    [options.length, spinSpeed]\n  );\n\n  const startSpin = useMemo(\n    () =>\n      animateOptionsWithId(\"startSpin\", (curPosition: number) => ({\n        keyframes: {\n          transform: [`rotateX(${curPosition}deg)`, \"rotateX(-360deg)\"],\n        },\n        animationOptions: {\n          duration: (1000 * options.length) / spinSpeed,\n          easing: \"ease-in\",\n          iterations: 1,\n        },\n      })),\n    [options.length, spinSpeed]\n  );\n\n  const stopSpin = useMemo(\n    () =>\n      animateOptionsWithId(\"stopSpin\", (curPosition: number, endPosition: number) => {\n        if (endPosition >= curPosition) {\n          endPosition -= 360;\n        }\n        return {\n          keyframes: {\n            transform: [`rotateX(${curPosition}deg)`, `rotateX(${endPosition}deg)`],\n          },\n          animationOptions: {\n            duration: (1000 * options.length) / spinSpeed,\n            easing: \"ease-out\",\n            fill: \"forwards\",\n            iterations: 1,\n          },\n        };\n      }),\n    [options.length, spinSpeed]\n  );\n\n  const optionToRotation = useCallback(\n    (option: string): number => {\n      const index = options.indexOf(option);\n      if (index < 0) {\n        throw new Error(`Option '${option}' is not present in 'options' array.`);\n      }\n      return (index / options.length) * -360;\n    },\n    [options]\n  );\n\n  const { ref, animate, getAnimation } = useWebAnimations<HTMLDivElement>({\n    onFinish: ({ animate, animation }) => {\n      const curAnimation = getAnimation();\n      /** Chain spin animation to the end of startSpin animation only if it has not been\n          replaced by another animation **/\n      if (\n        animation.id === startSpin.id &&\n        curAnimation?.id === startSpin.id &&\n        curAnimation?.playState === \"finished\"\n      ) {\n        animate(spin.options());\n      }\n    },\n  });\n\n  const stoppingAt = useRef<number | undefined>(0);\n\n  useEffect(() => {\n    let curPosition = getXRotation(ref);\n    if (curPosition === undefined) {\n      return;\n    }\n    // X rotation is returned counter-clockwise. Make negative to match with CSS animation rules.\n    curPosition *= -1;\n\n    if (selected !== undefined) {\n      let endPosition = optionToRotation(selected);\n      if (endPosition !== curPosition && endPosition !== stoppingAt.current) {\n        animate(stopSpin.options(curPosition, endPosition));\n        stoppingAt.current = endPosition;\n      }\n    } else {\n      const animation = getAnimation();\n      if (!animation || (animation.id !== startSpin.id && animation.id !== spin.id)) {\n        animate(startSpin.options(curPosition));\n        stoppingAt.current = undefined;\n      }\n    }\n  }, [animate, getAnimation, selected, ref, optionToRotation, spin, startSpin, stopSpin]);\n\n  return (\n    <div\n      className={styles.container}\n      style={{ \"--spin-speed\": spinSpeed, \"--num-options\": options.length }}\n    >\n      <div className={styles.optionsList} ref={ref} role=\"listbox\">\n        {options.map((option, i) => (\n          <div\n            style={{ \"--spin-index\": i }}\n            key={i}\n            className={`${styles.option} ${optionClassName}`}\n            onMouseDown={(e) => {\n              onOptionClick?.(e, option);\n            }}\n            role=\"option\"\n            aria-selected={option === selected ? \"true\" : \"false\"}\n          >\n            {option}\n          </div>\n        ))}\n      </div>\n      {/* This gives the SpinningSelector the correct width */}\n      <div className={styles.placeholderList}>\n        {options.map((option, i) => (\n          <div aria-hidden=\"true\" className={styles.placeholder} key={i}>\n            {option}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SpinningSelector;\n","import { RefObject } from \"react\";\n\nexport function getXRotation<T extends HTMLElement>(ref: RefObject<T>): number | undefined {\n  if (ref.current === null) {\n    return undefined;\n  }\n\n  const st = window.getComputedStyle(ref.current, null);\n  const tr =\n    st.getPropertyValue(\"-webkit-transform\") ||\n    st.getPropertyValue(\"-moz-transform\") ||\n    st.getPropertyValue(\"-ms-transform\") ||\n    st.getPropertyValue(\"-o-transform\") ||\n    st.getPropertyValue(\"transform\") ||\n    undefined;\n\n  if (tr === undefined || tr === \"none\") {\n    return 0;\n  }\n\n  const values = tr.split(\"(\")[1].split(\")\")[0].split(\",\");\n  let cosx = 0;\n  let sinx = 0;\n  switch (tr.split(\"(\")[0]) {\n    case \"matrix\":\n      // 2d matrix - https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix()\n      cosx = parseFloat(values[3]);\n      sinx = 0;\n      break;\n    case \"matrix3d\":\n      // 3d rotation matrix - https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotateX()\n      cosx = parseFloat(values[5]);\n      sinx = parseFloat(values[9]);\n      break;\n    default:\n      throw new Error(`Transform value ${tr} was not recognized.`);\n  }\n\n  let radians = Math.atan2(sinx, cosx);\n  if (radians < 0) {\n    radians += 2 * Math.PI;\n  }\n  return Math.round(radians * (180 / Math.PI)) % 360;\n}\n","import SpinningSelector from \"./components/SpinningSelector\";\nimport styles from \"./App.module.scss\";\nimport { useEffect, useRef, useState, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\n\nconst randomOptions = [\n  \"in progress\",\n  \"a test\",\n  \"silly\",\n  \"made in React\",\n  \"overengineered\",\n  \"a wheel\",\n];\n\nconst interactiveOptions = {\n  website: \"my website\",\n  github: \"my GitHub\",\n  name: \"my name\",\n  email: \"my email\",\n  linkedin: \"my LinkedIn\",\n};\n\nfunction App() {\n  const [selected, setSelected] = useState<string | undefined>(interactiveOptions.website);\n  const timeoutComplete = useRef(false);\n\n  const spinSpinner = () => {\n    if (timeoutComplete.current) {\n      setSelected(undefined);\n    }\n  };\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      timeoutComplete.current = true;\n      spinSpinner();\n    }, 3000);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  const stopSpinner = (e: MouseEvent, value: string) => {\n    e.stopPropagation();\n    setSelected(value);\n  };\n\n  const pickRandomOption = () => {\n    const randomOptionsDiff = randomOptions.filter((value) => value !== selected);\n\n    return randomOptionsDiff[Math.floor(Math.random() * randomOptionsDiff.length)];\n  };\n\n  return (\n    <div className={styles.page} onMouseMove={spinSpinner}>\n      <header className={styles.header}>\n        <a\n          className={styles.title}\n          href=\"/\"\n          onMouseMove={(e) => stopSpinner(e, interactiveOptions.name)}\n        >\n          Nima Rahnema\n        </a>\n        <div className={styles.socials}>\n          <a\n            href=\"mailto:nwrahnema@gmail.com\"\n            title=\"Email\"\n            onMouseMove={(e) => stopSpinner(e, interactiveOptions.email)}\n          >\n            <FontAwesomeIcon icon={faEnvelope} />\n          </a>\n          <a\n            href=\"https://github.com/nwrahnema\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            title=\"GitHub\"\n            onMouseMove={(e) => stopSpinner(e, interactiveOptions.github)}\n          >\n            <FontAwesomeIcon icon={faGithub} />\n          </a>\n          <a\n            href=\"https://linkedin.com/in/nima-rahnema\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            title=\"LinkedIn\"\n            onMouseMove={(e) => stopSpinner(e, interactiveOptions.linkedin)}\n          >\n            <FontAwesomeIcon icon={faLinkedin} />\n          </a>\n        </div>\n      </header>\n      <main className={styles.main}>\n        <h1 className={styles.headline}>\n          <span>This is</span>\n          <div onMouseMove={(e) => stopSpinner(e, selected ?? pickRandomOption())}>\n            <SpinningSelector\n              options={Object.values(interactiveOptions).concat(randomOptions)}\n              onOptionClick={(e) => stopSpinner(e, pickRandomOption())}\n              selected={selected}\n              optionClassName={styles.spinnerOption}\n            ></SpinningSelector>\n          </div>\n        </h1>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__1AVsN\",\"header\":\"App_header__2L3DO\",\"title\":\"App_title__2oBiX\",\"socials\":\"App_socials__27QIQ\",\"main\":\"App_main__uN9ca\",\"headline\":\"App_headline__J_zpD\",\"spinnerOption\":\"App_spinnerOption__2ZJ7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SpinningSelector_container__1cYRY\",\"optionsList\":\"SpinningSelector_optionsList__1_MAL\",\"option\":\"SpinningSelector_option__3eD1O\",\"placeholderList\":\"SpinningSelector_placeholderList__2tSrp\",\"placeholder\":\"SpinningSelector_placeholder__ACwZG\"};"],"sourceRoot":""}