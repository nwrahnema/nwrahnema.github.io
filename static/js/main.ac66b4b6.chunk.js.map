{"version":3,"sources":["components/SpinningSelector.tsx","utils.ts","App.tsx","index.tsx","App.module.scss","components/SpinningSelector.module.scss"],"names":["SpinningSelector","options","selected","spinSpeed","onOptionClick","optionClassName","useWebAnimations","onFinish","animate","animation","curAnimation","getAnimation","id","playState","keyframes","transform","animationOptions","duration","length","iterations","Infinity","ref","useEffect","curPosition","current","st","window","getComputedStyle","tr","getPropertyValue","undefined","values","split","cosx","sinx","parseFloat","console","error","Math","round","atan2","PI","getXRotation","selectedIndex","indexOf","endPosition","easing","fill","className","styles","container","style","optionsList","map","option","i","onMouseDown","e","placeholderList","aria-hidden","placeholder","randomOptions","interactiveOptions","github","name","email","linkedin","website","App","useState","setSelected","timeoutComplete","useRef","spinSpinner","timeout","setTimeout","clearTimeout","stopSpinner","value","stopPropagation","pickRandomOption","randomOptionsDiff","filter","floor","random","page","onMouseMove","header","title","socials","href","icon","faEnvelope","faGithub","faLinkedin","main","headline","concat","Object","spinnerOption","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ac66b4b6.chunk.js","sourcesContent":["import styles from \"./SpinningSelector.module.scss\";\nimport useWebAnimations from \"@wellyshen/use-web-animations\";\nimport { useEffect, MouseEvent } from \"react\";\nimport { getXRotation } from \"../utils\";\n\ntype Props = {\n  options: string[];\n  selected?: string;\n  spinSpeed?: number;\n  onOptionClick?: (e: MouseEvent, option: string) => void;\n  optionClassName?: string;\n};\n\nconst SpinningSelector = ({\n  options,\n  selected,\n  spinSpeed = 10,\n  onOptionClick,\n  optionClassName,\n}: Props) => {\n  const { ref, animate, getAnimation } = useWebAnimations<HTMLDivElement>({\n    onFinish: ({ animate, animation }) => {\n      const curAnimation = getAnimation();\n      /** Chain spin animation to the end of startSpin animation only if it has not been\n          replaced by another animation **/\n      if (\n        animation.id === \"startSpin\" &&\n        curAnimation?.id === \"startSpin\" &&\n        curAnimation?.playState === \"finished\"\n      ) {\n        animate({\n          id: \"spin\",\n          keyframes: {\n            transform: [\"rotateX(0deg)\", \"rotateX(-360deg)\"],\n          },\n          animationOptions: {\n            duration: (1000 * options.length) / spinSpeed,\n            iterations: Infinity,\n          },\n        });\n      }\n    },\n  });\n\n  useEffect(() => {\n    const curPosition = getXRotation(ref);\n    if (curPosition !== undefined) {\n      if (selected !== undefined) {\n        const selectedIndex = options.indexOf(selected);\n        if (selectedIndex < 0) {\n          console.error(`Selected value ${selected} is not present in 'options' array.`);\n          return;\n        }\n        let endPosition = (selectedIndex / options.length) * -360;\n        if (endPosition >= curPosition) {\n          endPosition -= 360;\n        }\n        animate({\n          id: \"stopSpin\",\n          keyframes: {\n            transform: [`rotateX(${curPosition}deg)`, `rotateX(${endPosition}deg)`],\n          },\n          animationOptions: {\n            duration: (1000 * options.length) / spinSpeed,\n            easing: \"ease-out\",\n            fill: \"forwards\",\n            iterations: 1,\n          },\n        });\n      } else {\n        animate({\n          id: \"startSpin\",\n          keyframes: {\n            transform: [`rotateX(${curPosition}deg)`, \"rotateX(-360deg)\"],\n          },\n          animationOptions: {\n            duration: (1000 * options.length) / spinSpeed,\n            easing: \"ease-in\",\n            iterations: 1,\n          },\n        });\n      }\n    }\n  }, [animate, getAnimation, options, spinSpeed, ref, selected]);\n\n  return (\n    <div\n      className={styles.container}\n      style={{ \"--spin-speed\": spinSpeed, \"--num-options\": options.length }}\n    >\n      <div className={styles.optionsList} ref={ref}>\n        {options.map((option, i) => (\n          <div\n            key={i}\n            className={`${styles.option} ${optionClassName}`}\n            onMouseDown={(e) => {\n              onOptionClick?.(e, option);\n            }}\n            style={{ \"--spin-index\": i }}\n          >\n            {option}\n          </div>\n        ))}\n      </div>\n      {/* This gives the SpinningSelector the correct width */}\n      <div className={styles.placeholderList}>\n        {options.map((option, i) => (\n          <div aria-hidden=\"true\" className={styles.placeholder} key={i}>\n            {option}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SpinningSelector;\n","import { RefObject } from \"react\";\n\nexport function getXRotation<T extends HTMLElement>(ref: RefObject<T>): number | undefined {\n  if (ref.current === null) {\n    return undefined;\n  }\n\n  const st = window.getComputedStyle(ref.current, null);\n  const tr = st.getPropertyValue(\"-webkit-transform\") ||\n           st.getPropertyValue(\"-moz-transform\") ||\n           st.getPropertyValue(\"-ms-transform\") ||\n           st.getPropertyValue(\"-o-transform\") ||\n           st.getPropertyValue(\"transform\") ||\n           undefined;\n\n  if (tr === undefined || tr === \"none\") {\n    return 0;\n  }\n  \n  \n  const values = tr.split('(')[1].split(')')[0].split(',');\n  let cosx = 0;\n  let sinx = 0;\n  switch (tr.split('(')[0]) {\n    case \"matrix\":\n      // 2d matrix - https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix()\n      cosx = parseFloat(values[3]);\n      sinx = 0;\n      break;\n    case \"matrix3d\":\n      // 3d rotation matrix - https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotateX()\n      cosx = parseFloat(values[5]);\n      sinx = parseFloat(values[9]);\n      break;\n    default:\n      console.error(`Transform value ${tr} was not recognized.`)\n  }\n  \n  return Math.round(Math.atan2(sinx, cosx) * (-180/Math.PI));\n}","import SpinningSelector from \"./components/SpinningSelector\";\nimport styles from \"./App.module.scss\";\nimport { useEffect, useRef, useState, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\n\nconst randomOptions = [\n  \"in progress\",\n  \"a test\",\n  \"silly\",\n  \"made in React\",\n  \"overengineered\",\n  \"a wheel\",\n];\n\nconst interactiveOptions = {\n  github: \"my GitHub\",\n  name: \"my name\",\n  email: \"my email\",\n  linkedin: \"my LinkedIn\",\n  website: \"my website\",\n};\n\nfunction App() {\n  const [selected, setSelected] = useState<string | undefined>(interactiveOptions.website);\n  const timeoutComplete = useRef(false);\n\n  const spinSpinner = () => {\n    if (timeoutComplete.current) {\n      setSelected(undefined);\n    }\n  };\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      timeoutComplete.current = true;\n      spinSpinner();\n    }, 3000);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  const stopSpinner = (e: MouseEvent, value: string) => {\n    e.stopPropagation();\n    setSelected(value);\n  };\n\n  const pickRandomOption = () => {\n    const randomOptionsDiff = randomOptions.filter((value) => value !== selected);\n\n    return randomOptionsDiff[Math.floor(Math.random() * randomOptionsDiff.length)];\n  };\n\n  return (\n    <div className={styles.page} onMouseMove={spinSpinner}>\n      <header className={styles.header}>\n        <div className={styles.title} onMouseMove={(e) => stopSpinner(e, interactiveOptions.name)}>\n          Nima Rahnema\n        </div>\n        <div className={styles.socials}>\n          <a\n            href=\"mailto:nwrahnema@gmail.com\"\n            title=\"Email\"\n            onMouseMove={(e) => stopSpinner(e, interactiveOptions.email)}\n          >\n            <FontAwesomeIcon icon={faEnvelope} />\n          </a>\n          <a\n            href=\"https://github.com/nwrahnema\"\n            title=\"GitHub\"\n            onMouseMove={(e) => stopSpinner(e, interactiveOptions.github)}\n          >\n            <FontAwesomeIcon icon={faGithub} />\n          </a>\n          <a\n            href=\"https://linkedin.com/in/nima-rahnema\"\n            title=\"LinkedIn\"\n            onMouseMove={(e) => stopSpinner(e, interactiveOptions.linkedin)}\n          >\n            <FontAwesomeIcon icon={faLinkedin} />\n          </a>\n        </div>\n      </header>\n      <div className={styles.main}>\n        <div className={styles.headline}>\n          <span>This is</span>\n          <div onMouseMove={(e) => stopSpinner(e, selected ?? pickRandomOption())}>\n            <SpinningSelector\n              options={randomOptions.concat(Object.values(interactiveOptions))}\n              onOptionClick={(e) => stopSpinner(e, pickRandomOption())}\n              selected={selected}\n              optionClassName={styles.spinnerOption}\n            ></SpinningSelector>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__1AVsN\",\"header\":\"App_header__2L3DO\",\"title\":\"App_title__2oBiX\",\"socials\":\"App_socials__27QIQ\",\"main\":\"App_main__uN9ca\",\"headline\":\"App_headline__J_zpD\",\"spinnerOption\":\"App_spinnerOption__2ZJ7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SpinningSelector_container__1cYRY\",\"optionsList\":\"SpinningSelector_optionsList__1_MAL\",\"option\":\"SpinningSelector_option__3eD1O\",\"placeholderList\":\"SpinningSelector_placeholderList__2tSrp\",\"placeholder\":\"SpinningSelector_placeholder__ACwZG\"};"],"sourceRoot":""}